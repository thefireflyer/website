{"version":3,"file":"component---src-pages-gallery-js-f00cabaa0710ad1c9cd1.js","mappings":"2HAMC,aAAe,GAAiB,IAAfA,EAAc,EAAdA,SAGd,OACE,uBAAMC,MAAO,CACTC,WAAW,yDACXC,UAAU,QACVC,MAAM,OACNC,OAAO,cACPC,IAAI,IACJC,SAAS,WACRC,KAAK,MAEV,8BAASR,GAET,uBAAKC,MAAO,CAACQ,aAAa,Y,mGCT1BC,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,sLAaPC,EAAWD,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,wPAoDd,UAzBgB,SAAC,GAAY,IAAXE,EAAU,EAAVA,KAEd,OAEA,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKC,MAAM,YACX,gBAAC,IAAD,KACA,uBAAKb,MAAO,CAACQ,aAAa,WAE1B,gBAACC,EAAD,KAEKG,EAAKE,kBAAkBC,MAAMC,KAAK,SAAAC,GAAK,OACtC,gBAACN,EAAD,KACA,gBAAC,EAAAO,KAAD,CAAMC,GAAIF,EAAMG,YAAYC,MAC5B,uBAAKC,IAAKL,EAAMG,YAAYG,IAAIC,UAAWxB,MAAO,CAACG,MAAM,OAAQsB,SAAS","sources":["webpack://test01/./src/components/BackgroundCover.js","webpack://test01/./src/pages/gallery.js"],"sourcesContent":[" import * as React from \"react\"\r\n import PropTypes from \"prop-types\"\r\n import { useStaticQuery, graphql } from \"gatsby\"\r\n import { Link, withPrefix } from \"gatsby\";\r\n \r\n \r\n export default ({children}) => {\r\n   \r\n \r\n    return (\r\n      <div  style={{\r\n          background:`linear-gradient(140deg, magenta, aqua) no-repeat fixed`,\r\n          minHeight:`100vh`,\r\n          width:`100%`,\r\n          height:`fit-content`,\r\n          top:`0`,\r\n          position:`absolute`,\r\n           left:`0`}}>\r\n      \r\n      <center>{children}</center>  \r\n  \r\n      <div style={{marginBottom:`5vh`}}></div>\r\n      </div>\r\n    )\r\n  }\r\n  ","\r\n// Step 1: Import React\r\nimport * as React from 'react'\r\nimport { withPrefix ,Link, useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport Img from \"gatsby-image\"\r\n\r\nimport styled from \"styled-components\"\r\nimport BackgroundCover from '../components/BackgroundCover';\r\nconst Section = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-auto-flow: row dense;\r\n  grid-template-columns: auto auto auto;\r\n  grid-gap: 1%;\r\n  \r\n@media only screen and (max-width: 900px) {\r\n  width: 95%;\r\n  grid-template-columns: auto;\r\n}\r\n`\r\n\r\nconst ImageDiv = styled.div`\r\n  position: relative;\r\n  \r\n  width: 100%;\r\n  height: fit-content;\r\n\r\n  filter: drop-shadow(0 0 1vw black);\r\n\r\n  img {\r\n    border-radius: 20px;\r\n  }\r\n\r\n  @keyframes on-hover {\r\n    0% {\r\n      transform: none;\r\n    }\r\n    100% {\r\n      transform: scale( 101%, 101% );\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    animation: on-hover 0.2s;\r\n    transform: scale( 101%, 101% );\r\n  }\r\n`\r\n\r\nconst Gallery = ({data}) => {    \r\n    \r\n    return (\r\n        \r\n    <Layout>\r\n        <Seo title=\"Gallery\" />\r\n        <BackgroundCover>\r\n        <div style={{marginBottom:`3.5vw`}}></div>\r\n\r\n        <Section>\r\n\r\n            {data.allMarkdownRemark.nodes.map( image => (\r\n              <ImageDiv>\r\n              <Link to={image.frontmatter.slug} >\r\n              <img src={image.frontmatter.img.publicURL} style={{width:`100%`, minWidth:`300px`}}></img>\r\n              </Link>\r\n              </ImageDiv>\r\n            ))}\r\n        </Section>\r\n        </BackgroundCover>\r\n\r\n    </Layout>\r\n    )\r\n}\r\n\r\nexport default Gallery\r\n\r\n/*export const query = graphql`\r\n    query test2 {\r\n        allImageSharp {\r\n            nodes {\r\n              fluid {\r\n                src\r\n                originalName\r\n              }\r\n            }\r\n          }\r\n    }\r\n`*/\r\nexport const query = graphql`\r\n  {\r\n    allMarkdownRemark(filter: {frontmatter: {type: {eq: \"Image post\"}}},sort: {fields: frontmatter___date, order: DESC}) {\r\n      nodes {\r\n        frontmatter {\r\n          slug\r\n          title\r\n          img {\r\n            publicURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["children","style","background","minHeight","width","height","top","position","left","marginBottom","Section","styled","ImageDiv","data","title","allMarkdownRemark","nodes","map","image","Link","to","frontmatter","slug","src","img","publicURL","minWidth"],"sourceRoot":""}