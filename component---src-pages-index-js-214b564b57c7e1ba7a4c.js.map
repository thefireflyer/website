{"version":3,"file":"component---src-pages-index-js-214b564b57c7e1ba7a4c.js","mappings":"2IAMC,aAAe,GAAiB,IAAfA,EAAc,EAAdA,SAGd,OACE,uBAAMC,MAAO,CAETC,UAAU,QACVC,MAAM,OACNC,OAAO,cACPC,IAAI,IACJC,SAAS,WACRC,KAAK,MAEV,8BAASP,GAET,uBAAKC,MAAO,CAACO,aAAa,Y,mCCLhC,IAfc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,WAAhB,OACZ,uBAAKC,UAAU,QACjBV,MAAO,CACHW,QAAuB,IAAbH,EAAmB,OAAS,UAEtC,0BACAI,IAAK,iCAAiCJ,EAAjC,kEAA+GA,EAA/G,UACLK,MAAOJ,EACPK,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAEf,uBAAKC,GAAG,a,mGCDNC,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,sLAaPC,EAAWD,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,8BAgCd,UAzBgB,SAAC,GAAY,IAAXE,EAAU,EAAVA,KAEd,OAEA,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAKR,MAAM,YACX,gBAAC,IAAD,KACA,uBAAKb,MAAO,CAACO,aAAa,WAE1B,gBAACW,EAAD,KAEKG,EAAKC,kBAAkBC,MAAMC,KAAK,SAAAC,GAAK,OACtC,gBAACL,EAAD,CAAUV,UAAU,YACpB,gBAAC,EAAAgB,KAAD,CAAMC,GAAIF,EAAMG,YAAYC,MAC5B,uBAAKjB,KAAKkB,EAAAA,EAAAA,YAAWL,EAAMG,YAAYG,IAAIC,WAAYhC,MAAO,CAACE,MAAM,OAAQ+B,SAAS,qB,sGCwCpG,UA3EiB,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KAqBf,OAnBAa,EAAAA,iBAAsB,WAEtB,IAAIC,EAASC,OAAOC,YAAYC,EAAuB,KACnDC,EAAe,EACfC,EAAUC,SAASC,uBAAuB,kBAE9C,SAASJ,IACLC,GAAgBA,EAAe,GAAKC,EAAQG,OAC5C,IAAI,IAAIC,EAAI,EAAGA,EAAIJ,EAAQG,OAAQC,IAE/BJ,EAAQK,KAAKD,GAAG5C,MAAMW,QAAUiC,GAAGL,EAAH,eAMxC,OAFAD,IAEO,WAAOF,OAAOU,cAAcX,OAInC,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAKtB,MAAM,SACP,gBAAC,IAAD,KACA,uBAAKkC,MAAM,YAGH1B,EAAKC,kBAAkBC,MAAMC,KAAI,SAAAwB,GAC7B,OAAO,uBAAKC,IAAKD,EAAS/B,GAAI8B,MAAM,iBAAiB/C,MAAO,CAACW,QAAQ,UACjE,gBAAC,EAAAe,KAAD,CAAMC,GAAIqB,EAASpB,YAAYC,MAC3B,uBACA7B,MAAO,CACHW,QAA+C,IAArCqC,EAASpB,YAAYsB,eAAsB,OAAS,SAEjEtC,KAAKkB,EAAAA,EAAAA,YAAWkB,EAASpB,YAAYG,IAAIC,aAC1C,gBAAC,IAAD,CACAxB,YAAawC,EAASpB,YAAYsB,eAClCzC,WAAYuC,EAASpB,YAAYf,QAEjC,uBAAKkC,MAAM,kBACP,0BAAKC,EAASpB,YAAYf,cAQlD,uBAAKkC,MAAM,gBAAgB/C,MAAO,CAACmD,UAAU,WACzC,gBAAC,EAAAzB,KAAD,CAAMC,GAAG,UACT,oCAKA,oJAC4H,2BAD5H,2BAE4B,qBAAGyB,KAAK,4DAAR,WAF5B,KAE4G,qBAAGA,KAAK,oCAAR,UAF5G,QAEsK,qBAAGA,KAAK,iCAAR,WAFtK","sources":["webpack://thefireflyer/./src/components/BackgroundCover.js","webpack://thefireflyer/./src/components/video.js","webpack://thefireflyer/./src/pages/gallery.js","webpack://thefireflyer/./src/pages/index.js"],"sourcesContent":[" import * as React from \"react\"\r\n import PropTypes from \"prop-types\"\r\n import { useStaticQuery, graphql } from \"gatsby\"\r\n import { Link, withPrefix } from \"gatsby\";\r\n \r\n \r\n export default ({children}) => {\r\n   \r\n \r\n    return (\r\n      <div  style={{\r\n          //background:`linear-gradient(140deg, magenta, aqua) no-repeat fixed`,\r\n          minHeight:`100vh`,\r\n          width:`100%`,\r\n          height:`fit-content`,\r\n          top:`0`,\r\n          position:`absolute`,\r\n           left:`0`}}>\r\n      \r\n      <center>{children}</center>  \r\n  \r\n      <div style={{marginBottom:`5vh`}}></div>\r\n      </div>\r\n    )\r\n  }\r\n  ","import React from \"react\"\r\nconst Video = ({ videoSrcURL, videoTitle }) => (\r\n  <div className=\"video\"\r\nstyle={{\r\n    display: (videoSrcURL!=\"\") ? \"none\" : \"block\",\r\n}}>\r\n    <iframe\r\n    src={`https://www.youtube.com/embed/`+videoSrcURL+`?autoplay=1&controls=0&modestbranding=1&enablejsapi=1&playlist=`+videoSrcURL+`&loop=1`}\r\n    title={videoTitle}\r\n    frameborder=\"0\"\r\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n    allowFullScreen\r\n    ></iframe>\r\n    <div id=\"cover\"></div>\r\n  </div>\r\n)\r\nexport default Video\r\n","\r\n// Step 1: Import React\r\nimport * as React from 'react'\r\nimport { withPrefix ,Link, useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport Img from \"gatsby-image\"\r\n\r\nimport styled from \"styled-components\"\r\nimport BackgroundCover from '../components/BackgroundCover';\r\nconst Section = styled.div`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-auto-flow: row dense;\r\n  grid-template-columns: auto auto auto;\r\n  grid-gap: 1%;\r\n  \r\n@media only screen and (max-width: 900px) {\r\n  width: 95%;\r\n  grid-template-columns: auto;\r\n}\r\n`\r\n\r\nconst ImageDiv = styled.div`\r\n\r\n  img {\r\n    border-radius: 20px;\r\n  }\r\n`\r\n\r\nconst Gallery = ({data}) => {    \r\n    \r\n    return (\r\n        \r\n    <Layout>\r\n        <Seo title=\"Gallery\" />\r\n        <BackgroundCover>\r\n        <div style={{marginBottom:`3.5vw`}}></div>\r\n\r\n        <Section>\r\n\r\n            {data.allMarkdownRemark.nodes.map( image => (\r\n              <ImageDiv className='pickable'>\r\n              <Link to={image.frontmatter.slug} >\r\n              <img src={withPrefix(image.frontmatter.img.publicURL)} style={{width:`100%`, minWidth:`300px`}}></img>\r\n              </Link>\r\n              </ImageDiv>\r\n            ))}\r\n        </Section>\r\n        </BackgroundCover>\r\n\r\n    </Layout>\r\n    )\r\n}\r\n\r\nexport default Gallery\r\n\r\n/*export const query = graphql`\r\n    query test2 {\r\n        allImageSharp {\r\n            nodes {\r\n              fluid {\r\n                src\r\n                originalName\r\n              }\r\n            }\r\n          }\r\n    }\r\n`*/\r\nexport const query = graphql`\r\n  {\r\n    allMarkdownRemark(filter: {frontmatter: {type: {eq: \"Image post\"}}},sort: {fields: frontmatter___date, order: DESC}) {\r\n      nodes {\r\n        frontmatter {\r\n          slug\r\n          title\r\n          img {\r\n            publicURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","\r\n// Step 1: Import React\r\nimport * as React from 'react'\r\nimport { withPrefix ,Link, useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport Gallery from './gallery';\r\nimport BackgroundCover from '../components/BackgroundCover';\r\nimport Video from '../components/video';\r\n\r\nconst HomePage = ({data}) => {\r\n\r\n    React.useLayoutEffect(() => {\r\n        \r\n    let handle = window.setInterval(update_featured_entry, 3000);\r\n    let currentIndex = 0\r\n    let entries = document.getElementsByClassName(\"featured-entry\")\r\n\r\n    function update_featured_entry() {\r\n        currentIndex = (currentIndex + 1) % entries.length\r\n        for(var i = 0; i < entries.length; i++)\r\n        {\r\n            entries.item(i).style.display = i==currentIndex?`block`:`none`\r\n        }\r\n    }\r\n\r\n    update_featured_entry()\r\n\r\n    return () => {window.clearInterval(handle)};\r\n    });\r\n\r\n    return (\r\n    <Layout>\r\n        <Seo title=\"Home\" />\r\n            <BackgroundCover>\r\n            <div class=\"featured\">\r\n\r\n                {\r\n                    data.allMarkdownRemark.nodes.map(featured => {\r\n                        return <div key={featured.id} class=\"featured-entry\" style={{display:`block`}}>\r\n                            <Link to={featured.frontmatter.slug}>\r\n                                <img\r\n                                style={{\r\n                                    display: (featured.frontmatter.videoSourceURL!=\"\") ? \"none\" : \"block\",\r\n                                }}\r\n                                 src={withPrefix(featured.frontmatter.img.publicURL)} />\r\n                                <Video\r\n                                videoSrcURL={featured.frontmatter.videoSourceURL}\r\n                                videoTitle={featured.frontmatter.title}\r\n                                ></Video>\r\n                                <div class=\"featured-title\">\r\n                                    <h1>{featured.frontmatter.title}</h1>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div class=\"About-section\" style={{textAlign:`center`}}>\r\n                <Link to=\"/about\">\r\n                <h1>\r\n                    About\r\n                </h1>\r\n                </Link>\r\n\r\n                <p>\r\n                    Welcome to my website, I am a programmer and digital artist and most of the stuff I make in either medium goes up here. <br></br>\r\n                    You can also find me on <a href=\"https://www.youtube.com/channel/UCJBJX_6j1520fVj73qi3RGQ\">YouTube</a>, <a href=\"https://github.com/theflyingfire\">GitHub</a> and <a href=\"https://thefireflyer.itch.io/\">Itch.io</a>.\r\n                </p>\r\n            </div>\r\n            \r\n            {/*}\r\n            <embed style={{borderRadius:`15px 50px 30px`, filter:`drop-shadow(0 0 1vw rgba(0,0,0,0.5))`}} type=\"text/html\" src={withPrefix(\"gallery\")} width=\"80%\" height=\"600vh\"></embed>\r\n            \r\n            <div style={{marginBottom:`5vh`}}></div>\r\n\r\n            <embed style={{borderRadius:`15px 50px 30px`, filter:`drop-shadow(0 0 1vw rgba(0,0,0,0.5))`}} type=\"text/html\" src={withPrefix(\"blog\")} width=\"80%\" height=\"600vh\"></embed>\r\n            */}\r\n\r\n            </BackgroundCover>\r\n    </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n\r\nexport const featuredPostsQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      sort: {fields: frontmatter___date, order: ASC}\r\n      filter: {frontmatter: {slug: {in: [\"/images/img6\", \"/blog/test1\"]}}}\r\n    ) {\r\n      nodes {\r\n          id\r\n        frontmatter {\r\n          title\r\n          slug\r\n          img {\r\n            publicURL\r\n          }\r\n          videoSourceURL\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `"],"names":["children","style","minHeight","width","height","top","position","left","marginBottom","videoSrcURL","videoTitle","className","display","src","title","frameborder","allow","allowFullScreen","id","Section","styled","ImageDiv","data","allMarkdownRemark","nodes","map","image","Link","to","frontmatter","slug","withPrefix","img","publicURL","minWidth","React","handle","window","setInterval","update_featured_entry","currentIndex","entries","document","getElementsByClassName","length","i","item","clearInterval","class","featured","key","videoSourceURL","textAlign","href"],"sourceRoot":""}