{"version":3,"file":"component---src-pages-index-js-5fcdc9af86ca22d4ed47.js","mappings":"uIAQC,aAAe,GAA6B,IAA3BA,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAG1B,OACE,uBAAMC,MAAO,CACTF,WAAWA,EACXG,UAAU,QACVC,MAAM,OACNC,OAAO,cACPC,IAAI,IACJC,SAAS,WACRC,KAAK,MAEV,8BAASP,GAET,uBAAKQ,UAAU,qB,yFCbfC,EAAeC,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,kTA8BZC,EAAyBD,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,yfA8CtBE,EAAM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACV,OAAQ,qBAAGL,UAAU,MAAMM,KAAMD,EAAKE,MAClC,uBAAKC,IAAKH,EAAKI,UACf,0BAAKJ,EAAKK,QAIZC,EAAO,CACT,CACID,KAAM,aACND,SAASG,EAAAA,EAAAA,YAAW,aACpBL,KAAM,+CAEV,CACIG,KAAM,WACND,SAASG,EAAAA,EAAAA,YAAW,aACpBL,KAAM,6CAEV,CACIG,KAAM,eACND,QAAS,iGACTF,KAAM,kDAIRM,EAAUX,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,qGASPY,EAAmBZ,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,ybAoCIA,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,4yBA4LvB,UApGkB,WACd,IAAMG,GAAOU,EAAAA,EAAAA,gBAAe,cAqB9B,OACE,gCACA,gBAAC,IAAD,CAAKC,MAAM,UACX,gBAAC,IAAD,KAEI,wCACA,gBAACb,EAAD,KACKQ,EAAKM,KAAI,SAAAC,GACN,OAAQ,gBAACd,EAAD,CAAKC,KAAMa,QAK3B,gBAACL,EAAD,MAeA,0CAEA,gBAACC,EAAD,KACKT,EAAKc,OAAOC,MAAMH,KAAI,SAAAI,GAAI,OAC3B,uBACArB,UAAU,OACVsB,IAAKD,EAAKE,YAAYC,MAClB,gBAAC,EAAAC,KAAD,CAAMC,GAAIL,EAAKE,YAAYC,MACzB,gBAAC,EAAAG,EAAD,CACAC,OAAOC,EAAAA,EAAAA,GAASR,EAAKE,YAAYO,IAAI,GAAGC,iBACxCC,IAAKX,EAAKE,YAAYP,MACtBvB,MAAO,CAACE,MAAM,UACd,0BAAK0B,EAAKE,YAAYP,aAMhC,gBAACH,EAAD,MAEA,gDACA,gBAACZ,EAAD,KAGI,uBAAKD,UAAU,WACf,uBAAKQ,KAAKI,EAAAA,EAAAA,YAAW,iBAGrB,uBAAKZ,UAAU,WAEf,4CACA,qBAAGM,KAAK,oCAAmC,qCAC3C,qBAAGA,KAAK,oCAAmC,sCAC3C,qBAAGA,KAAK,4DAA2D,sCACnE,qBAAGA,KAAK,iCAAgC,sCAExC,kCACA,qBAAGA,KAAK,WAAU,oCAClB,qBAAGA,KAAK,eAAc","sources":["webpack://thefireflyer/./src/components/BackgroundCover.jsx","webpack://thefireflyer/./src/pages/index.js"],"sourcesContent":[" import * as React from \"react\"\r\n import PropTypes from \"prop-types\"\r\n import { useStaticQuery, graphql } from \"gatsby\"\r\n import { Link, withPrefix } from \"gatsby\";\r\n import styled from \"styled-components\"\r\n \r\n\r\n\r\n export default ({background, children}) => {\r\n   \r\n \r\n    return (\r\n      <div  style={{\r\n          background:background,//`linear-gradient(140deg, magenta, aqua) no-repeat fixed`,\r\n          minHeight:`100vh`,\r\n          width:`100%`,\r\n          height:`fit-content`,\r\n          top:`0`,\r\n          position:`absolute`,\r\n           left:`0`}}>\r\n      \r\n      <center>{children}</center>  \r\n      \r\n      <div className=\"contentMargin\"></div>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n  ","\r\n// Step 1: Import React\r\nimport * as React from 'react'\r\nimport { withPrefix ,Link, StaticQuery, useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport Seo from '../components/seo'\r\nimport BackgroundCover from '../components/BackgroundCover';\r\nimport styled from \"styled-components\"\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\n\r\nconst AboutSection = styled.div`\r\n\r\n  width: 80%;\r\n  display: grid;\r\n  grid-auto-flow: row;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 1%;\r\n\r\n\r\n  .section {\r\n    \r\n    background: rgba(0, 0, 0, 0.5);\r\n    \r\n    \r\n    filter: drop-shadow(0 0 1vw black);\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 20px;\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    width: 95%;\r\n    grid-template-columns: auto;\r\n    .section {\r\n        filter: none;\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst AppLibraryStyleSection = styled.div`\r\n\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-template-columns: auto auto auto;\r\n    grid-column-gap: 4%;\r\n    grid-row-gap: 6%;\r\n\r\n\r\n    width: 80%;\r\n\r\n    .app {\r\n        padding-bottom: 3rem;\r\n        padding-top: 3rem;\r\n        border-radius: 20px;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        text-decoration: none;\r\n        color: white;\r\n        \r\n        filter: drop-shadow(0 0 1vw black);\r\n\r\n        transform: none;\r\n        transition: transform 200ms;\r\n\r\n        width: 26vw;\r\n\r\n\r\n    }\r\n    .app:hover {\r\n        transform: scale(105%, 105%);\r\n    }\r\n\r\n    \r\n    @media only screen and (max-width: 900px) {\r\n        display: grid;\r\n        width: 95%;\r\n        grid-row-gap: 1%;\r\n        grid-template-columns: auto;\r\n        \r\n        .app {\r\n            filter: none;\r\n            width: auto;\r\n        }\r\n    }\r\n`\r\n\r\nconst App = ({data}) => {\r\n    return (<a className='app' href={data.path}>\r\n        <img src={data.iconUrl}></img>\r\n        <h2>{data.name}</h2>\r\n    </a>)\r\n}\r\n\r\nconst apps = [\r\n    {\r\n        name: \"HomePortal\",\r\n        iconUrl: withPrefix(\"/icon.png\"),\r\n        path: \"https://theflyingfire.github.io/homeportal/\"\r\n    },\r\n    {\r\n        name: \"Timeable\",\r\n        iconUrl: withPrefix(\"/icon.png\"),\r\n        path: \"https://theflyingfire.github.io/timeable/\"\r\n    },\r\n    {\r\n        name: \"AutoControlG\",\r\n        iconUrl: \"https://raw.githubusercontent.com/theflyingfire/AutoControlG/v1.1/AutoControlG/assets/logo.png\",\r\n        path: \"https://github.com/theflyingfire/AutoControlG\"\r\n    },\r\n]\r\n\r\nconst Divider = styled.div`\r\nmargin-bottom: 7vh;\r\n@media only screen and (min-width: 900px) {\r\n    .contentMargin {\r\n        margin-bottom: 10vh;\r\n    }\r\n  }\r\n`\r\n\r\nconst PostStyleSection = styled.div`\r\n    width:50%;\r\n    display:grid;\r\n    grid-auto-flow:row;\r\n    row-gap:3%;\r\n    min-width:350px;\r\n\r\n    .post {\r\n        overflow:hidden;\r\n        border-radius:20px;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        text-decoration: none;\r\n        color: white;\r\n        \r\n        filter: drop-shadow(0 0 1vw black);\r\n\r\n        transform: none;\r\n        transition: transform 200ms;\r\n        align-content: center;\r\n    }\r\n    .post:hover {\r\n        transform: scale(102%,102%);\r\n    }\r\n\r\n    @media only screen and (max-width: 900px) {\r\n        display: grid;\r\n        width: 95%;\r\n        grid-row-gap: 1%;\r\n        grid-template-columns: auto;\r\n        \r\n        .post {\r\n            filter: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst GamesStyleSection = styled.div`\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-template-columns: auto auto auto;\r\n    grid-column-gap: 4%;\r\n    grid-row-gap: 6%;\r\n\r\n\r\n    width: 80%;\r\n\r\n\r\n    .game-holder {\r\n        \r\n        position: relative;\r\n        perspective: 500px;\r\n    \r\n    }\r\n\r\n    .game {\r\n        \r\n        width: 20vw;\r\n        height: 50vh;\r\n        overflow: hidden;\r\n        filter: drop-shadow(0 0 1vw black);\r\n\r\n        transform: none;\r\n        transition: transform 500ms;\r\n\r\n    }\r\n    .game img {\r\n        height: 100%;\r\n        width: auto;\r\n    }\r\n    .game:hover {\r\n        transform: rotateX(5deg);\r\n    }\r\n\r\n    .glossy {\r\n        position: absolute;\r\n        top: -15vh;\r\n        right: -15vw;\r\n        width: 50vw;\r\n        height: 100vh;\r\n        background: linear-gradient(180deg, rgba(255,255,255,0.1) 14.5%, rgba(255,255,255,0) 15%, rgba(255,255,255,0) 100%);\r\n\r\n        //pointer-events: none;\r\n        background-blend-mode: overlay;\r\n\r\n        transform: rotateZ(25deg);\r\n        transition: transform 500ms;\r\n    }\r\n    \r\n    .glossy:hover {\r\n        transform: rotateZ(25deg) rotateX(-35deg);\r\n    }\r\n\r\n    @media only screen and (max-width: 900px) {\r\n\r\n        display: grid;\r\n        width: 95%;\r\n        grid-row-gap: 1%;\r\n        grid-template-columns: auto;\r\n\r\n        .game {\r\n            width: 80vw;\r\n        }\r\n        \r\n    }\r\n`\r\n\r\nconst games = [\r\n    {\r\n        name: \"test demo\",\r\n        coverUrl: \"\",\r\n        link: \"/test\"\r\n    },\r\n    {\r\n        name: \"test demo\",\r\n        coverUrl: \"\",\r\n        link: \"/test\"\r\n    },\r\n    {\r\n        name: \"test demo\",\r\n        coverUrl: \"\",\r\n        link: \"/test\"\r\n    },\r\n]\r\n\r\nconst IndexPage = () => {\r\n    const data = useStaticQuery(graphql`\r\n    {\r\n        allMdx(filter: {frontmatter: {type: {eq: \"Blog post\"}}}, sort: {fields: frontmatter___date, order: DESC}) {\r\n          nodes {\r\n            frontmatter {\r\n              slug\r\n              title\r\n              img {\r\n                publicURL\r\n                childImageSharp {\r\n                  gatsbyImageData(\r\n                    placeholder: BLURRED\r\n                    formats: [AUTO, WEBP, AVIF]\r\n                  )\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }`)\r\n\r\n  return (\r\n    <>\r\n    <Seo title=\"index\" />\r\n    <BackgroundCover>\r\n      \r\n        <h1>App Libary</h1>\r\n        <AppLibraryStyleSection>\r\n            {apps.map(app => {\r\n                return (<App data={app} ></App>)\r\n            })}\r\n        </AppLibraryStyleSection>\r\n\r\n\r\n        <Divider></Divider>\r\n\r\n        {/*<h1>Game Library</h1>\r\n        <GamesStyleSection>\r\n        {games.map(game => {\r\n                return (<a href={game.link} className='game-holder'><div className='game'>\r\n                    <img src={game.coverUrl}></img>\r\n                    <div className='glossy'></div>\r\n                    </div>\r\n                    </a>)\r\n            })}\r\n        </GamesStyleSection>\r\n\r\n        <Divider></Divider>*/}\r\n\r\n        <h1>Recent Posts</h1>\r\n\r\n        <PostStyleSection>\r\n            {data.allMdx.nodes.map(link => (\r\n            <div\r\n            className='post'\r\n            key={link.frontmatter.slug}>\r\n                <Link to={link.frontmatter.slug}>\r\n                  <GatsbyImage\r\n                  image={getImage(link.frontmatter.img[0].childImageSharp)}\r\n                  alt={link.frontmatter.title}\r\n                  style={{width:`100%`}}></GatsbyImage>\r\n                  <h1>{link.frontmatter.title}</h1>\r\n                </Link>\r\n            </div>\r\n            ))}\r\n        </PostStyleSection>\r\n\r\n        <Divider></Divider>\r\n\r\n        <h1>About/Contact Info</h1>\r\n        <AboutSection>\r\n            \r\n\r\n            <div className='section'>\r\n            <img src={withPrefix('icon__.png')}></img>\r\n            </div>\r\n            \r\n            <div className='section'>\r\n            \r\n            <h1>Other accounts</h1>\r\n            <a href=\"https://github.com/theflyingfire\"><h1>Github</h1></a>\r\n            <a href=\"https://codepen.io/theflyingfire\"><h1>CodePen</h1></a>\r\n            <a href=\"https://www.youtube.com/channel/UCJBJX_6j1520fVj73qi3RGQ\"><h1>YouTube</h1></a>\r\n            <a href=\"https://thefireflyer.itch.io/\"><h1>Itch.io</h1></a>\r\n            \r\n            <h1>Misc</h1>\r\n            <a href='mailto:'><h1>Email</h1></a>\r\n            <a href='/resume.pdf'><h1>Resume</h1></a>\r\n\r\n            </div>\r\n\r\n        </AboutSection>\r\n\r\n    </BackgroundCover>\r\n        \r\n      </>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"names":["background","children","style","minHeight","width","height","top","position","left","className","AboutSection","styled","AppLibraryStyleSection","App","data","href","path","src","iconUrl","name","apps","withPrefix","Divider","PostStyleSection","useStaticQuery","title","map","app","allMdx","nodes","link","key","frontmatter","slug","Link","to","G","image","getImage","img","childImageSharp","alt"],"sourceRoot":""}